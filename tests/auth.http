### 환경 변수 설정
@baseUrl = http://localhost:8000/api/v1
@contentType = application/json
@authToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZWlubUByYXN0YWxpb24uZGV2IiwidXNlcl9pZCI6MSwiZXhwIjoxNzQwNTUyNzIzfQ.XLfnNlRUo__XUXWcHZH1oBt92SSriZX_KJIG1ywT1vI

### 1. 사용자 등록 (회원가입)
POST {{baseUrl}}/auth/register
Content-Type: {{contentType}}

{
  "email": "solver_test@example.com",
  "username": "테스트풀이유저1",
  "password": "password123"
}

### 2. 로그인
# 응답에서 받은 access_token 값을 위의 authToken 변수에 설정하세요
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "teinm@rastalion.dev",
  "password": "Rjadmsrhdid2@"
}

### 3. 현재 로그인한 사용자 정보 조회
GET {{baseUrl}}/auth/me
Authorization: Bearer {{authToken}}

### 4. 사용자 정보 업데이트
PUT {{baseUrl}}/auth/me
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "username": "업데이트된유저명"
}

### 5. OAuth2 호환 토큰 로그인
POST {{baseUrl}}/auth/login/access-token
Content-Type: application/x-www-form-urlencoded

username=test@example.com&password=password123

### 6. 관리자 계정 등록
POST {{baseUrl}}/auth/register
Content-Type: {{contentType}}

{
  "email": "admin@example.com",
  "username": "관리자",
  "password": "admin123",
  "is_admin": "Y",
  "role": "admin"
}

### 7. 출제자 계정 등록
POST {{baseUrl}}/auth/register
Content-Type: {{contentType}}

{
  "email": "creator@example.com",
  "username": "출제자",
  "password": "creator123",
  "role": "creator"
}

### 8. 관리자 로그인
# 응답에서 받은 access_token 값을 아래 요청에 사용하세요
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "admin@example.com",
  "password": "admin123"
}

### 9. 역할별 사용자 목록 조회 (관리자 권한 필요)
GET {{baseUrl}}/auth/users?role=creator
Authorization: Bearer {{authToken}}

### 10. 사용자 역할 변경 (관리자 권한 필요)
# user_id는 실제 사용자 ID로 변경하세요
PUT {{baseUrl}}/auth/users/4/role
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "role": "creator"
}

### 11. 유효하지 않은 로그인 시도
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "nonexistent@example.com",
  "password": "wrongpassword"
}

### 12. 사용자 정보 업데이트 (비밀번호 변경)
PUT {{baseUrl}}/auth/me
Content-Type: {{contentType}}
Authorization: Bearer {{authToken}}

{
  "password": "newpassword123"
}

### 13. 새 비밀번호로 로그인
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "test@example.com",
  "password": "newpassword123"
}